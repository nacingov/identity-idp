#!/usr/bin/env ruby
require 'bundler'
Bundler.setup(:default, :production)

require 'active_support/core_ext/hash/deep_merge'
require 'logger'
require 'login_gov/hostdata'
require 'yaml'

module Deploy
  class Activate
    attr_reader :logger, :s3_client

    def initialize(logger: default_logger, s3_client: nil)
      @logger = logger
      @s3_client = s3_client
    end

    # rubocop:disable Metrics/AbcSize
    def run
      logger.info "app root: #{root}"

      LoginGov::Hostdata.s3(logger: logger, s3_client: s3_client).download_configs(
        '/%<env>s/idp/v1/application.yml' => env_yaml_path,
        '/%<env>s/idp/v1/database.yml'    => File.join(root, 'config/database.yml')
      )

      application_config = YAML.load_file(example_application_yaml_path).
                           deep_merge(YAML.load_file(env_yaml_path))

      File.open(result_yaml_path, 'w') { |file| file.puts YAML.dump(application_config) }
    end
    # rubocop:enable Metrics/AbcSize

    def default_logger
      logger = Logger.new(STDOUT)
      logger.progname = 'script/activate'
      logger
    end

    def root
      File.expand_path('../../', __FILE__)
    end

    def env_yaml_path
      File.join(root, 'config/application_s3_env.yml')
    end

    def example_application_yaml_path
      File.join(root, 'config/application.yml.example')
    end

    def result_yaml_path
      File.join(root, 'config/application.yml')
    end
  end
end

Deploy::Activate.new.run if $PROGRAM_NAME == __FILE__
